plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'jacoco' // Plugin de JaCoCo para la cobertura de pruebas
}

group = 'co.edu.unisabana'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

jacoco {
	toolVersion = "0.8.8" // Versión de JaCoCo
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // Genera el reporte de JaCoCo después de las pruebas
}

jacocoTestReport {
	dependsOn test // Las pruebas deben ejecutarse antes de generar el reporte

	reports {
		xml.enabled false // Desactiva el reporte en XML
		csv.enabled false // Desactiva el reporte en CSV
		html.enabled true // Habilita el reporte en HTML
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/dto/**",   // Excluye DTOs
					"**/entity/*",  // Excluye entidades
					"**/model/*",   // Excluye modelos
					"**/jpa/*"      // Excluye JPA
			])
		}))
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.31'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation group: 'com.h2database', name: 'h2', version: '2.1.214'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
